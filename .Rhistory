b <- c()
c <- c()
list[a,b,c] <- bar
type(bar)
typeof(bar)
foo
foo == MapToDelta( foo )$w
foo != MapToDelta( foo )$w
all.equal(foo, MapToDelta(foo)$w)
all.equal(foo, MapToDelta(foo)$w)
if(all.equal(foo, MapToDelta(foo)$w))
)
if(all.equal(foo, MapToDelta(foo)$w)) print("ok")
if(all.equal(foo, MapToDelta(foo)$w)) {print("ok")}
all.equal(foo, MapToDelta(foo)$w)
foo
MapToDelta( foo )$w
all.equal( foo, MapToDelta(foo)$w )
is.true(all.equal( foo, MapToDelta(foo)$w ))
isTRUE(all.equal( foo, MapToDelta(foo)$w ))
foo <- rnorm(10)
bar <- MapToDelta(foo)
print( data.frame("v" = foo, "w" = bar$w) )
print( isTRUE( all.equal((foo*bar$sgn)[bar$P], bar$w) ) )
print( isTRUE( all.equal(RetrV(bar$w, bar$sgn, bar$P), foo) ) )
isFALSE( all.equal(RetrV(bar$w, bar$sgn, bar$P), foo) )
print( !isTRUE( all.equal((foo*bar$sgn)[bar$P], bar$w) ) )
FastProxSL1 <- function( y, theta){
if( !isTRUE(all.equal(theta, MapToDelta(theta)$w )) ) warning("given theta is not in Delta_p")
foo <- MapToDelta( y )
return(foo)
}
FastProxSL1(foo, c(0,1,2))
foo <- rnorm(10)
bar <- MapToDelta(foo)
print( data.frame("v" = foo, "w" = bar$w) )
print( isTRUE( all.equal((foo*bar$sgn)[bar$P], bar$w) ) )
print( isTRUE( all.equal(RetrV(bar$w, bar$sgn, bar$P), foo) ) )
a
a <- c(-1,2,3)
c[c>0]
a[a>0]
DeltaCheck <- function( v ){
return( isTRUE(all.equal(v, MapToDelta(v)$v )) )
}
foo
DeltaCheck(foo)
a
DeltaCheck(a)
a <- c(3,2,1)
DeltaCheck(a)
DeltaCheck <- function( v ){
return( isTRUE(all.equal(v, MapToDelta(v)$w )) )
}
DeltaCheck(a)
DeltaCheck(foo)
a
a <- c(3,2,0,-1)
DeltaCheck(a)
a <- c(3,2,0)
DeltaCheck(a)
min(a) >= 0
a[1:]
a[1,]
a[1]
a[1,2]
tail(a)
a
tail(a,1)
tail(a,2)
tail(a,2)
head(a,2)
min(head(a,2)-tail(a,2))
a[-1]
a[,-1]
a[+1]
a[+1]
a[+2]
a[1:2]
a[-1]
a[1:]
tail(a,length(a)-1)
a[-1]
a[1]
aa
a
a[,-1]
head(a,1)
a[-2]
a[-1]
a[-length(a)]
a[-length(a)]-a[-1]
diff(a)
a
a <- c(5,3,2,0)
diff(a)
max(diff(a))
DeltaCheck <- function( v ){
# return( isTRUE(all.equal(v, MapToDelta(v)$w )) )
return( max(diff(v)) <= 0 && min(v) >= 0  )
}
DeltaCheck(foo)
DeltaCheck(a)
rm(list=ls())
library("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
getwd()
source("R-codes/IterativeAlgs.R")
source("R-codes/IterativeAlgs.R")
library(ggplot2, respape2)
set.seed(351759)
p <- 200
delta <- 0.5
eps <- 0.1
sigma <- 0
n <- p*delta
A <- matrix(rnorm(n*p,mean=0,sd=1/sqrt(p*delta)), n,p)
alpha <- c(rep(1,p*delta),rep(0,p*(1-delta)))
stepSize <- 100
maxIter <- 10**3
x <- rnorm(p)*rbinom(p,1,eps)
y <- as.numeric(A%*%x+sigma*rnorm(n))
lambda <- alpha_to_lambda(alpha, x, delta)
knitr::opts_chunk$set(echo = TRUE)
# Libraries
packages <- c("foreign", "lubridate", "ggplot2","reshape2")
lapply(packages, library, character.only = TRUE)
# working directory
#setwd("~/Dropbox/Uczelnia//")
library("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
library(ggplot2, respape2)
set.seed(351759)
p <- 200
delta <- 0.5
eps <- 0.1
sigma <- 0
n <- p*delta
A <- matrix(rnorm(n*p,mean=0,sd=1/sqrt(p*delta)), n,p)
alpha <- c(rep(1,p*delta),rep(0,p*(1-delta)))
stepSize <- 100
maxIter <- 10**3
x <- rnorm(p)*rbinom(p,1,eps)
y <- as.numeric(A%*%x+sigma*rnorm(n))
lambda <- alpha_to_lambda(alpha, x, delta)
x0 <- rnorm(p)*rbinom(p,1,eps)
ISTA <- new("ISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, max_iter=10**2, backtrack=FALSE)
ISTA_res <- runAlg(ISTA)
FISTA_res <- runAlg(FISTA)
AMP_res <- runAlg(AMP)
AMP_res@x
AMP_res@loss
ISTA_res@x
ISTA_res@loss
ISTA_res@x
FISTA_res@x
FISTA_res@t
FISTA_res@stepsize
FISTA_res@stepSize
FISTA_res@loss
FISTA_res@loss
FISTA_res@x
FISTA_res@loss
FISTA@x_old
FISTA_res@x_old
t <- c(1:200)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(1:50)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(3:50)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(3:20)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(3:20)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(3:10)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(3:10)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
lambda
lambda[1]*FISTA_res@stepSize
FISTA_res@x
library("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA_res <- runAlg(FISTA)
FISTA_res <- runAlg(FISTA)
source("R-codes/IterativeAlgs.R")
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA_res <- runAlg(FISTA)
t <- c(3:20)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
FISTA_res@x
FISTA_res@loss
ISTA_res@loss
t <- c(2:50)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t])#, AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA")#,"AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(10:100)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t])#, AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA")#,"AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
t <- c(10:100)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, max_iter=10**2, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, max_iter=10**2, backtrack=FALSE)
AMP_res <- runAlg(AMP)
tau_ast <- alpha_to_tau_ast(alpha, x, delta, sigma2)
sigma2 <- 0
tau_ast <- alpha_to_tau_ast(alpha, x, delta, sigma2)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=10**2, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=10**2, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP@x
AMP_res@x
a <- function() rnorm(p)*rbinom(p,1,eps)
a
a()
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x0, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
prior <- function() rnorm(p)*rbinom(p,1,eps)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@x
t <- c(10:100)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
prior <- function() rnorm(p)*rbinom(p,1,eps)
x0 <- prior()
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
set.seed(351759)
p <- 100
delta <- 0.5
eps <- 0.1
sigma2 <- 0
n <- p*delta
A <- matrix(rnorm(n*p,mean=0,sd=1/sqrt(p*delta)), n,p)
alpha <- c(rep(1,p*delta),rep(0,p*(1-delta)))
stepSize <- 10
maxIter <- 10**3
prior <- function() rnorm(p)*rbinom(p,1,eps)
x0 <- prior()
x <- rnorm(p)*rbinom(p,1,eps)
y <- as.numeric(A%*%x+sigma2*rnorm(n))
x <- rnorm(p)*rbinom(p,1,eps)
y <- as.numeric(A%*%x+sigma2*rnorm(n))
lambda <- alpha_to_lambda(alpha, x, delta)
lambda <- alpha_to_lambda(alpha, x, delta)
tau_ast <- alpha_to_tau_ast(alpha, x, delta, sigma2)
ISTA <- new("ISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
ISTA_res <- runAlg(ISTA)
FISTA_res <- runAlg(FISTA)
FISTA_res@x
FISTA_res@loss
ISTA_res@loss
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@x
AMP_res@loss
t <- c(10:100)
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
t <- c(10:100)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@x
t <- c(10:100)
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
knitr::opts_chunk$set(echo = TRUE)
# Libraries
packages <- c("foreign", "lubridate", "ggplot2","reshape2")
lapply(packages, library, character.only = TRUE)
# working directory
#setwd("~/Dropbox/Uczelnia//")
# library("rstudioapi")
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
set.seed(351759)
p <- 1000
delta <- 0.5
eps <- 0.1
sigma2 <- 0
n <- p*delta
A <- matrix(rnorm(n*p,mean=0,sd=1/sqrt(p*delta)), n,p)
alpha <- c(rep(1,p*delta),rep(0,p*(1-delta)))
stepSize <- 10
maxIter <- 10**3
prior <- function() rnorm(p)*rbinom(p,1,eps)
x0 <- prior()
x <- rnorm(p)*rbinom(p,1,eps)
y <- as.numeric(A%*%x+sigma2*rnorm(n))
lambda <- alpha_to_lambda(alpha, x, delta)
tau_ast <- alpha_to_tau_ast(alpha, x, delta, sigma2)
ISTA <- new("ISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
ISTA <- new("ISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
ISTA_res <- runAlg(ISTA)
FISTA_res <- runAlg(FISTA)
AMP_res <- runAlg(AMP)
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=prior, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=100, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP@loss
AMP_res@loss
AMP_res@x
AMP_res <- runAlg(AMP)
AMP_res@x
AMP_res@loss
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
t <- c(10:100)
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
df <- data.frame(t, ISTA_res@loss[t], FISTA_res@loss[t], AMP_res@loss[t])
colnames(df) <- c("iteration","ISTA","FISTA","AMP")
df <- melt(df, id="iteration")
ggplot(data = df,
aes(x=iteration, y=value, colour=variable))+
geom_line(size=.5) +
ggtitle("Loss evolution")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@loss
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@x
AMP_res@loss
source("R-codes/alpha-lambda.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x0, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@x
AMP_res@loss
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x0, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
source("R-codes/IterativeAlgs.R")
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x0, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
AMP_res <- runAlg(AMP)
AMP_res@loss
ISTA <- new("ISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
ISTA_res <- runAlg(ISTA)
# library("rstudioapi")
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("R-codes/FastProxSL1.R")
source("R-codes/alpha-lambda.R")
source("R-codes/IterativeAlgs.R")
set.seed(351759)
p <- 1000
delta <- 0.5
eps <- 0.1
sigma2 <- 0
n <- p*delta
A <- matrix(rnorm(n*p,mean=0,sd=1/sqrt(p*delta)), n,p)
alpha <- c(rep(1,p*delta),rep(0,p*(1-delta)))
stepSize <- 10
maxIter <- 10**3
prior <- function() rnorm(p)*rbinom(p,1,eps)
x0 <- prior()
x <- rnorm(p)*rbinom(p,1,eps)
y <- as.numeric(A%*%x+sigma2*rnorm(n))
lambda <- alpha_to_lambda(alpha, x, delta)
tau_ast <- alpha_to_tau_ast(alpha, x, delta, sigma2)
ISTA <- new("ISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
FISTA <- new("FISTA-SLOPE", y=y, A=A, x=x0, lambda=lambda, stepSize=stepSize, max_iter=maxIter)
AMP <-   new("AMP-SLOPE", y=y, A=A, prior=x, lambda=lambda, alpha=alpha, tau_ast=tau_ast, max_iter=20, backtrack=FALSE)
ISTA_res <- runAlg(ISTA)
AMP_res@loss
